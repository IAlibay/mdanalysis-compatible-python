name: mdanalysis-compatible-pythons
description: Get Python versions compatible with MDAnalysis
inputs:
  release:
    decription: Which release version to get compatible Python versions for
    required: false
    default: develop
  include:
    description: Python versions to additionally include in the Python version list output
    required: false
    default: '[]'
  exclude:
    description: Python versions to exclude from the Python version list output
    required: false
    default: '[]'
outputs:
  python-versions:
    description: List of compatible Python versions
    value: "${{ steps.get-python-versions.outputs.python-versions }}"
  latest-python:
    description: Latest compatible Python version
    value: "${{ steps.get-latest-python.outputs.latest-python }}"
  oldest-python:
    description: Oldest compatible Python version
    value: "${{ steps.get-older-python.outputs.oldest-python }}"
  stable-python:
    description: Stable Python version (N-1 latest)
    value: "${{ steps.get-stable-python.outputs.stable-python }}"


runs:
  using: "composite"
  steps:
    - name: Current Python info
      shell: bash
      run: |
        python --version
        python3 --version

    - name: get compatible python versions
      id: get-python-versions
      shell: bash
      working-directory: "${{ github.action_path }}"
      run: |
        chmod a+x ./get_mda_python_range.py
        pymatrix=$(./get_mda_python_range.py --release ${{ inputs.release }} --include ${{ inputs.include }} --exclude ${{ inputs.exclude }})
        echo $pymatrix
        echo "python-versions=${pymatrix}" >> $GITHUB_OUTPUT

    - name: get latest python
      id: get-latest-python
      shell: bash
      working-directory: "${{ github.action_path }}"
      run: |
        chmod a+x ./get_version.py
        ver=$(./get_version.py --matrix fromJSON(${{ steps.get-python-versions.outputs.python-versions }}) --index 0)
        echo $ver
        echo "latest-python=${ver}" >> $GITHUB_OUTPUT

    - name: get oldest python
      id: get-oldest-python
      working-directory: "${{ github.action_path }}"
      shell: bash
      run: |
        ver=$(./get_version.py --matrix ${{ steps.get-python-versions.outputs.python-versions }} --index -1)
        echo $ver
        echo "oldest-python=${ver}" >> $GITHUB_OUTPUT

    - name: get stable python
      id: get-stable-python
      working-directory: "${{ github.action_path }}"
      shell: bash
      run: |
        ver=$(./get_version.py --matrix ${{ steps.get-python-versions.outputs.python-versions }} --index 1)
        echo $ver
        echo "stable-python=${ver}" >> $GITHUB_OUTPUT
